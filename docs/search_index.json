[["index.html", "Computational Movement Analysis: Patterns and Trends in Environmental Data Master ENR, Spring Semester 2022 Welcome to the course! License", " Computational Movement Analysis: Patterns and Trends in Environmental Data Master ENR, Spring Semester 2022 Patrick Laube, Nils Ratnaweera, Nikolaos Bakogiannis 25 März, 2022 Welcome to the course! For the practical part of the course, building-up skills for analyzing movement data in the software environment R, youll be using data from the ZHAW project Prävention von Wildschweinschäden in der Landwirtschaft. The project investigates the spatiotemporal movement patterns of wild boar (Sus scrofa) in agricultural landscapes. We will study the trajectories of these wild boar, practising the most basic analysis tasks of Computational Movement Analysis (CMA). This video gives a nice introduction into the project License These R Exercises are created by Patrick Laube, Nils Ratnaweera and Nikolaos Bakogiannis for the Course *Computational Movement Analysis\" and are licensed under Creative Commons Attribution 4.0 International License. This work is licensed under a Creative Commons Attribution 4.0 International License. "],["W00_01_preparations.html", "Preparation Check you version of R Check your version of RStudio Install the necessary packages Install Git Configure RStudio Introduce yourself to Git Prepare the folder structure for this course Create an RStudio project for the first week", " Preparation Much of this chapter was taken from Bryan and Heister (2021). If you want to dive deeper into using Git, we highly recommend this book. For an even deeper dive into Git, read Chacon and Straub (2014). Both books are available free and open source on happygitwithr.com and git-scm.com/book, respectively. DELETE IT AFTERWARDS Check you version of R Check your Version of R by opening RStudio and typing the following command into the console. R.version.string ## [1] &quot;R version 4.1.3 (2022-03-10)&quot; This returns the version number of your R installation, whereas the first digit (4) indicates the number of the major release, the second digit (1) indicates the minor release and the last digit (3) refers to the patch release. As a general rule of thumb, you will want to update R if you dont have the current major version or are lagging two (or more) versions behind the current minor release In the time of writing (März, 2022), the current R Version is 4.1.3 (released on 2022-03-10 08:05:38, see cran.r-project.org). Your installation should therefore not be older than 4.0.0. If it is, make sure that you have updated R until next week (doing it now will probably take too long). Check these instructions on how to update R Check your version of RStudio RStudio is the Graphical User Interface (GUI) we use in our course to interact with R. RStudio should not be too old either and we recommend updating if you dont have the latest version: check if this is the case by clicking on help &gt; check for updates. If you need to update RStudio, dont update now but have a newer version of RStudio installed before next week. Install the necessary packages If you havent already, install the packages tidyverse, sf and terra(using install.packages()). install.packages(&quot;tidyverse&quot;) install.packages(&quot;sf&quot;) install.packages(&quot;terra&quot;) Install Git Next, install Git. There are different Git installers to choose from, we recommend the following: Windows: We recommend installing Git for Windows, also known as msysgit or Git Bash. When asked about Adjusting your PATH environment, select Git from the command line and also from 3rd-party software RStudio prefers Git to be installed in C:/Program Files/Git, we recommend following this convention Otherwise, we believe it is good to accept the defaults macOS: We recommend you install the Xcode command line tools (not all of Xcode), which includes Git Go to the shell and enter xcode-select --install to install developer command line tools Linux: On Ubuntu or Debian Linux: sudo apt-get install git On Fedora or RedHat Linux: sudo yum install git Configure RStudio Now we will set some RStudio Global options. But first, close all instances of RStudio and restart it (!!!). Then go to Tools &gt; Global options. R General Deactivate the option Restore .RData into workspace at startup1 Set Save workspace to .RData on exit to Never2 Git / SVN Activate the option Enable version control interface for RStudio projects If the Field Git executable: shows (Not Found), browse to your git installation (previous step). This path should look something like this: Windows: C:/Program Files/Git/bin/git.exe (not C:/Program Files/Git/cmd/git.exe or some-path/git-bash.exe) Linux / macOS: /usr/bin/git Terminal Set option New terminals open with to Git Bash Click on Ok to apply the change and close the options menu. Introduce yourself to Git Now it is time to introduce yourself to git. For this, we need to use the shell terminal, which is why we are going to spend a few word on the shell first. The shell is a program on your computer whose job is to run other programs. It looks very much like the R-console (in the bottom left of RStudio) that you are already know: You have a place to input text which is transferred to (and interpreted by) the computer when you press enter. RStudio has a shell terminal right next to the R-console (tab Terminal). Every Windows comes with two different shell installations: Command prompt and PowerShell. After installing Git we now have a third option, Git Bash. The shell terminal in RStudio uses Command prompt per default, in the last step we just switched the shell to Git Bash. Now use the terminal in RStudio to introduce yourself: git config --global user.name &quot;Maria Nusslinger&quot; git config --global user.email &quot;nussmar@email.com&quot; Of course, replace the name and address with your credentials. Use the email address that you will use to create your Github account (which we will do next week). Prepare the folder structure for this course By this point, you probably have created a folder for this course somewhere on your computer. In our example, we assume this folder is located here: C:/Users/yourname/semester2/Modul_CMA (mentally replace this with your actual path). Before we dive into the exercises, take a minute to think about how you are going to structure your files in this folder. This course will take place over 7 weeks, and in each week you will receive or produce various files. We recommend creating a separate folder for each week, and one folder for the semester project, like so: Course Folder (C:\\\\Users\\\\yourname\\\\semester2\\\\Modul_CMA) ¦--week1 ¦--week2 ¦--week3 ¦--week4 ¦--week5 ¦--week6 ¦--week7 °--semester_project For the R-exercises that take place in weeks 1 to 5, we recommend that you create a new RStudio Project each week in subdirectory of the appropriate week. For example, this week your folder structure could look like this: Folder Week 1 (C:\\\\Users\\\\yourname\\\\semester2\\\\Modul_CMA\\\\week1) ¦--slides.pdf ¦--my_notes.docx ¦--seminar_screenshot.jpg °--week1-rexercise ¦--week1-rexercise.Rproj ¦--wildschwein_BE.csv °--my_solution.Rmd Note: the RStudio Project is located in a subfolder of C:/Users/yourname/semester2/Modul_CMA/week1 and named week1-rexercise. week1-rexercise is the projects directory name and the project name we realize that that the week number is redundant, there is a reason3 for this this means each week is a fresh start (which has pros and cons) Create an RStudio project for the first week Create a new RStudio Project (File &gt; New Project &gt; New Directory &gt; New Project). Click on Browse and switch to your equivalent of the folder C:/Users/yourname/semester2/Modul_CMA/week1 (the project we are about to initiate will be be created in a subdirectory of this folder). Click on open to confirm the selection In the field Directory name, type week1-rexercise. This will be the name of your RStudio project and its parent directory. Check the option Create a git repository Click on Create Project You are all set! You can start working on the tasks of exercise 1. "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
